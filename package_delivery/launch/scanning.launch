<launch>
    <!-- args --> 
    <!-- Behzad's workstation ip --> 
    <arg name="host_ip" value="10.157.90.51" /> 
    <!--arg name="host_ip" value="169.254.153.158" /--> 
    <!-- Hasans's workstation ip --> 
    <!--arg name="host_ip" value="10.157.90.49" /--> 
    
    <param name="/ip_addr" value="$(arg host_ip)" />

    <!-- orb slam location--> 
    <arg name="orb_slam2_dir" value="$(find ORB_SLAM2)/../../.."/> 

    <!-- stat file-->
    <param name="stats_file_addr" value="$(find package_delivery)/../data/scanning/stats.json" />
    <param name="supervisor_mailbox" value="$(find package_delivery)/../data/scanning/supervisor_mailbox.txt" />

    <!-- Set the localization method -->
    <!-- arg name="localization_method" value="orb_slam2_rgbd" /-->
    <!-- arg name="localization_method" value="ground_truth" /-->
    <arg name="localization_method" value="gps" />

    <!-- setting DEBUG to false prevents publishing and subscribing to rviz /--> 
    <!-- also planning to prevent stdio stuff(if they really matter)--> 
    <arg name="DEBUG" value="true" /> 
    <arg name="CLCT_DATA" value="true" />
    <param name="ros_DEBUG" type="bool" value="$(arg DEBUG)" />

    <!-- set this to "" if you don't want perf -->
    <arg name="my_launch_prefix" value="" /> 
    <!-- arg name="my_launch_prefix" value="/home/nvidia/install/perf/perf record -g fp"/ -->
    
    
    <group if="$(arg CLCT_DATA)">
    <param name="enable_statistics" value="true"/>
    </group> 


    <!-- starting nodes --> 
    <node pkg="profile_manager" type="profile_manager" name="profile_manager" output="screen">
    <param name="/ip_addr" value="$(arg host_ip)" />
    </node>


    <!-- Octomap -->
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.5" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="world" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="20" />

		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/points" />

		<!-- Filter ground for binary occupancy map -->
		<param name="base_frame_id" value="world" />
		<!-- <param name="filter_ground" value="true" />
		<param name="ground_filter_plane_distance" value="1.00" />
		<param name="ground_filter/distance" value="0.50" /> -->
	    <param name="pointcloud_min_z" type="double" value="-2.0" />
	    <param name="pointcloud_max_z" type="double" value="10.0" />
	    <param name="occupancy_min_z" type="double" value="-2.00" />
	    <param name="occupancy_max_z" type="double" value="10.0" />
		<!-- <param name="ground_filter_plane_distance" value="0.07" />
		<param name="ground_filter/distance" value="0.04" />
		<param name="ground_filter/angle" value="0.4" /> -->
	</node>

	<!-- Point-cloud publisher -->
 	<node pkg="airsim_img_publisher" type="airsim_imgPublisher" name="airsim_imgPublisher">
		<!-- IP of the Airsim computer -->
		<param name="Airsim_ip" value="$(arg host_ip)" />

		<!-- Port of the Airsim computer (this is default, do not change!) -->
		<param name="Airsim_port" value="41451"/>

		<!-- RGB camera parameters (parameters when calibrated) -->
		<param name="Fx" value="256"/>
		<param name="Fy" value="256"/>
		<param name="cx" value="256"/>
		<param name="cy" value="144"/>
		<param name="scale_x" value="512"/>  <!-- Width when calibrated!-->
		<param name="scale_y" value="288"/> <!-- Height when calibrated!-->

		<!-- Depth baseline -->
		<param name="Tx" value="0.14"/> 
		<param name="scale" value="0.38"/> 

		<!-- Topic with odometry information for the vehicle (used to create tf tree) -->
		<param name="odomTopic" value="/mavros/local_position/odom"/>
	
        <!-- Localization of the depth images -->
        <param name="localization_method" value="$(arg localization_method)" />

    </node>

	<!-- Nodelet manager for this pipeline -->
	<node pkg="nodelet" type="nodelet" args="manager" name="depth_transforms_manager"/>

	<!-- Convert to point cloud -->
	<node pkg="nodelet" type="nodelet" name="cloudify"
	args="load depth_image_proc/point_cloud_xyz depth_transforms_manager --no-bond">

		<!-- Input: Camera calibration and metadata.  (sensor_msgs/CameraInfo) -->
		<remap from="rgb/camera_info" to="/Airsim/camera_info"/> 
		<!-- Input: Rectified depth image -->
		<remap from="image_rect" to="/Airsim/depth"/>

    </node>
	
    
    <node pkg="package_delivery" type="panic_pcl" name="panic_pcl" output="screen">
		<param name="panic_distance" value="1.75"/>
    </node>
 
    <!--node pkg="package_delivery" type="future_collision" name="future_collision" output="screen"/-->
    
    <?ignore 
    <!-- Convert to point cloud -->
	<node pkg="package_delivery" type="panic" name="panic">
		<remap from="depth_img" to="/Airsim/depth_2"/>
		<!-- remap from="depth_img" to="/stereo/left/image_raw"/ -->
    </node>
    ?>

	<!-- Path-Planner -->
	<node pkg="package_delivery" type="motion_planner" name="motion_planner" output="screen" launch-prefix="$(arg my_launch_prefix)">
		<param name="nodes_to_add_to_roadmap" value="300"/>
		<param name="max_dist_to_connect_at" value="10"/>

		<param name="v_max" value="4.0"/>
		<param name="a_max" value="10.0"/>
        <param name="drone_radius" value="2.0"/>
        <param name="drone_height" value="0.6"/>

		<param name="max_roadmap_size" value="1600"/>

        <param name="rrt_step_size" value="1.0"/>
        <param name="rrt_bias" value="10"/>
		
        <param name="x_dist_to_sample_from__low_bound" value="-30"/>
		<param name="x_dist_to_sample_from__high_bound" value="30"/>
        <param name="y_dist_to_sample_from__low_bound" value="-5"/>
        <param name="y_dist_to_sample_from__high_bound" value="60"/>
        <param name="z_dist_to_sample_from__low_bound" value="1"/>
        <param name="z_dist_to_sample_from__high_bound" value="5"/>

        <param name="sampling_interval" value="0.5"/>

        <!-- options for motion_planning core --> 
        <param name="motion_planning_core" value="lawn_mower"/>
        <!-- param name="motion_planning_core" value="lawn_mower"/-->
	</node>

	<!-- Demo program that controls drone -->
	<!-- <node pkg="package_delivery" type="scanning" name="scanning" output="screen" launch-prefix="/home/nvidia/install/perf/perf record -g fp"> -->
	<node pkg="package_delivery" type="scanning" name="scanning" output="screen">
        <param name="ip_addr" value="$(arg host_ip)"/>
        <!-- param name="issue_cmd__time_step" value=".05"/-->
		<!-- param name="points_to_replan_after" value="1000000000"/-->
    
        <!-- Localization-->
        <param name="localization_method" value="$(arg localization_method)" />
    </node>

	<group if="$(eval localization_method == 'orb_slam2_rgbd')">
    <node pkg="ORB_SLAM2" type="RGBD" name="RGBD" args="$(arg orb_slam2_dir)/Vocabulary/ORBvoc.txt $(arg orb_slam2_dir)/cameras/airsim-rgbd.yaml /camera/rgb/image_raw:=/Airsim/right/image_raw
    /camera/depth_registered/sw_registered/image_rect:=/Airsim/depth"/>
	</group>

    <!-- rviz -->
	<group if="$(arg DEBUG)">
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find package_delivery)/extras/rvizConfig.rviz"/>
	</group> 
0

</launch>

