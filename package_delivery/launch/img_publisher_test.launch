<launch>
    <!-- args --> 
    <!-- Behzad's workstation ip --> 
    <arg name="host_ip" default="10.157.90.51" />
    <!--arg name="host_ip" default="169.254.153.158" /--> 
    <!-- Hasans's workstation ip --> 
    <!--arg name="host_ip" default="10.157.90.49" /-->
    <!-- Hasans's direct connection ip --> 
    <!-- arg name="host_ip" default="169.254.250.191" / -->
    <!-- Wenzhi's workstation ip -->
    <!-- arg name="host_ip" default="10.157.90.62" /-->

    <!-- orb slam location--> 
    <arg name="orb_slam2_dir" default="$(find ORB_SLAM2)/../../.."/> 
    
    <!-- Set the localization method /-->
    <!-- arg name="localization_method" default="orb_slam2_rgbd" /-->
    <arg name="localization_method" default="ground_truth" />
    <!--arg name="localization_method" default="gps" /-->
    
    <!-- stat file-->
    <param name="stats_file_addr" value="$(find package_delivery)/../data/package_delivery/stats.txt" />


    <!-- setting DEBUG to false prevents publishing and subscribing to rviz /--> 
    <!-- also planning to prevent stdio stuff(if they really matter)-->
    <arg name="DEBUG" default="true" />
    <param name="ros_DEBUG" type="bool" value="$(arg DEBUG)" />

    <!-- set this to "" if you don't want perf -->
    <arg name="my_launch_prefix" default="" /> 
    <!-- arg name="my_launch_prefix" default="/home/nvidia/install/perf/perf record -g fp"/ -->

    <!-- starting nodes --> 
    <!-- Octomap -->
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.5" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="world" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="20" />

		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/points" />

		<!-- Filter ground for binary occupancy map -->
		<param name="base_frame_id" value="world" />
		<!-- <param name="filter_ground" value="true" />
		<param name="ground_filter_plane_distance" value="1.00" />
		<param name="ground_filter/distance" value="0.50" /> -->
	    <param name="pointcloud_min_z" type="double" value="-2.0" />
	    <param name="pointcloud_max_z" type="double" value="10.0" />
	    <param name="occupancy_min_z" type="double" value="-2.00" />
	    <param name="occupancy_max_z" type="double" value="10.0" />
		<!-- <param name="ground_filter_plane_distance" value="0.07" />
		<param name="ground_filter/distance" value="0.04" />
		<param name="ground_filter/angle" value="0.4" /> -->
	</node>

	<!-- Point-cloud publisher -->
 	<node pkg="airsim_img_publisher" type="airsim_imgPublisher" name="airsim_imgPublisher">
		<!-- IP of the Airsim computer -->
		<param name="Airsim_ip" value="$(arg host_ip)" />

		<!-- Port of the Airsim computer (this is default, do not change!) -->
		<param name="Airsim_port" value="41451"/>

		<!-- RGB camera parameters (parameters when calibrated) -->
		<param name="Fx" value="256"/>
		<param name="Fy" value="256"/>
		<param name="cx" value="256"/>
		<param name="cy" value="144"/>
		<param name="scale_x" value="512"/>  <!-- Width when calibrated!-->
		<param name="scale_y" value="288"/> <!-- Height when calibrated!-->

		<!-- Depth baseline -->
		<param name="Tx" value="0.14"/> 
		<param name="scale" value="0.38"/> 

        <!-- Localization of the depth images -->
        <param name="localization_method" value="$(arg localization_method)" />
	</node>

	<!-- Nodelet manager for this pipeline -->
	<node pkg="nodelet" type="nodelet" args="manager" name="depth_transforms_manager"/>

	<!-- Convert to point cloud -->
	<node pkg="nodelet" type="nodelet" name="cloudify"
	args="load depth_image_proc/point_cloud_xyz depth_transforms_manager --no-bond">

		<!-- Input: Camera calibration and metadata.  (sensor_msgs/CameraInfo) -->
		<remap from="rgb/camera_info" to="/Airsim/camera_info"/> 
		<!-- Input: Rectified depth image -->
		<remap from="image_rect" to="/Airsim/depth"/>

    </node>
	
    <!-- rviz -->
	<group if="$(arg DEBUG)">
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find package_delivery)/extras/rvizConfig.rviz"/>
    </group>

</launch>

