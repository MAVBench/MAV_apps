<launch>
  <arg name="mav_name" default="airsim_qc" />
  <arg name="enable_logging" default="true" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  
  <!-- important params affecting performance -->
  <arg name="nbvp/gain/range" default="1"/>
  <arg name="system/v_max" default=".5"/>
  <arg name="nbvp/tree/extension_range" default="3.5"/>
  <arg name="planning_resolution" default=".8"/>
  <arg name="mapping_resolution" default=".1" />

  <!-- orb slam location--> 
  <arg name="orb_slam2_dir" value="$(find ORB_SLAM2)/../../.."/> 
  <!-- localization method -->
  <!--arg name="localization_method" value="orb_slam2_rgbd" /-->
  <!--arg name="localization_method" value="ground_truth" /-->
  <!--arg name="localization_method" value="gps" /-->
  <arg name="localization_method" value="vins_mono"/>

  <!--- set according to the localization method--> 
  <arg name="system/dyaw_max" default=".25"/>
  <arg name="max_yaw_rate" default="15"/>
  <arg name="max_yaw_rate_during_flight" default="15"/>
  <param name="v_max" value="$(arg system/v_max)"/>
  <param name="max_yaw_rate" value="$(arg max_yaw_rate)"/>
  <param name="max_yaw_rate_during_flight" value="$(arg max_yaw_rate_during_flight)"/>

  <!-- termination criteria-->
  <arg name="coverage_threshold" default="50"/>

  <!-- DEBUGING-data collection params--> 
  <arg name="DEBUG" value="true" />
  <arg name="CLCT_DATA" value="true" />
  <param name="stats_file_addr" value="$(find mapping_and_sar)/../data/mapping/stats.json" />
  <param name="supervisor_mailbox" value="$(find mapping_and_sar)/../data/mapping/supervisor_mailbox.txt" />
  <param name="status_monitor_rate" value="100" />


  <!--node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 world world 100" /-->

  <!-- node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 $(arg localization_method) camera 100" /-->

  <!-- Behzad's workstation ip --> 
  <!-- arg name="host_ip" value="10.157.34.101" /--> 
  <arg name="host_ip" value="10.157.90.51" />
  <!--arg name="host_ip" value="169.254.153.158" /-->
  <!-- Hasans's workstation ip --> 
  <!--arg name="host_ip" default="10.157.90.49" /-->
  <!-- Hasans's direct connection ip --> 
  <!-- arg name="host_ip" default="169.254.250.191" / -->
  <!-- Wenzhi's workstation ip -->
  <!-- arg name="host_ip" default="10.157.90.62" /-->
  <param name="/ip_addr" value="$(arg host_ip)" />

    <group if="$(arg CLCT_DATA)">
        <param name="enable_statistics" value="true"/>
        <node pkg="profile_manager" type="profile_manager" name="profile_manager" output="screen">
        <param name="/ip_addr" value="$(arg host_ip)" />
        </node>
    </group> 
    <include file="$(find mapping_and_sar)/launch/mav_inspector.launch">
    <arg name="DEBUG" value="$(arg DEBUG)"/> 
    <arg name="nbvp/gain/range" value="$(arg nbvp/gain/range)"/>
    <arg name="system/v_max" value="$(arg system/v_max)"/>
    <arg name="system/dyaw_max" value="$(arg system/dyaw_max)"/>

    <arg name="nbvp/tree/extension_range" value="$(arg nbvp/tree/extension_range)"/>
    <arg name="update_coverage_freq" value="3"/> 
    <arg name="coverage_threshold" value="$(arg coverage_threshold)"/> 
    <arg name="max_yaw_rate" value="$(arg max_yaw_rate)"/> 
    <arg name="max_yaw_rate_during_flight" value="$(arg max_yaw_rate_during_flight)"/> 
    <arg name="app_name" value="mapping" />
    <arg name="mav_name" value="$(arg mav_name)" />
    <arg name="host_ip" value="$(arg host_ip)"/>
    <arg name="localization_method" value="$(arg localization_method)"/>
    <arg name="waypoint_x" value="0.0" />
    <arg name="waypoint_y" value="0.0" />
    <arg name="waypoint_z" value="1.0" />
    <arg name="param_file" value="$(find mapping_and_sar)/resource/mapping.yaml" />
    <arg name="enable_logging" value="$(arg enable_logging)" />
    <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
    <arg name="log_file" value="$(arg log_file)" />
    <!-- the following is for octomap --> 
    <arg name="tf_frame" value="world" />
    <arg name="pcl_topic" value="/points" />
    <arg name="resolution" value="$(arg planning_resolution)" />
    <arg name="visualize_max_z" value="10" />
    <arg name="sensor_max_range" value="6.0" />
  </include>
  <!--comment -->
  <!-- point cloud and pose -->
  <include file="$(find mapping_and_sar)/launch/point_cloud_and_pose.launch">
  <arg name="localization_method" value="$(arg localization_method)"/>
  <arg name="host_ip" value="$(arg host_ip)"/>
  </include>
  <!--/comment-->


    <!--- get rid of this if you wan to directly use octomap_world octomap/-->
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="$(arg planning_resolution)" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="world" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="6" />

		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/points" />

		<!-- Filter ground for binary occupancy map -->
		<param name="base_frame_id" value="world" />
		<!-- <param name="filter_ground" value="true" />
		<param name="ground_filter_plane_distance" value="1.00" />
		<param name="ground_filter/distance" value="0.50" /> -->
	    <param name="pointcloud_min_z" type="double" value="-2.0" />
	    <param name="pointcloud_max_z" type="double" value="10.0" />
	    <param name="occupancy_min_z" type="double" value="-2.00" />
	    <param name="occupancy_max_z" type="double" value="10.0" />
        <!-- <param name="ground_filter_plane_distance" value="0.07" />
		<param name="ground_filter/distance" value="0.04" />
		<param name="ground_filter/angle" value="0.4" /> -->
	</node>

    <comment>
    <!--- octomap for planning-->
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server_2">
        <param name="resolution" value="$(arg mapping_resolution)" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="world" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="6" />

		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/points" />
		<!-- Filter ground for binary occupancy map -->
		<param name="base_frame_id" value="world" />
		<!-- <param name="filter_ground" value="true" />
		<param name="ground_filter_plane_distance" value="1.00" />
		<param name="ground_filter/distance" value="0.50" /> -->
	    <param name="pointcloud_min_z" type="double" value="-2.0" />
	    <param name="pointcloud_max_z" type="double" value="10.0" />
	    <param name="occupancy_min_z" type="double" value="-2.00" />
	    <param name="occupancy_max_z" type="double" value="10.0" />
	    <remap from="octomap_binary" to="/octomap_binary2_2"/>	
	    <remap from="occupied_cells_vis_array" to="/occupied_cells_vis_array_2"/>	
        <!-- <param name="ground_filter_plane_distance" value="0.07" />
		<param name="ground_filter/distance" value="0.04" />
		<param name="ground_filter/angle" value="0.4" /> -->
	</node>

   </comment>

  <arg name="param_file" value="$(find mapping_and_sar)/resource/mapping.yaml" />
  <!-- following the tejactory --> 
  <!-- group ns="$(arg mav_name)" -->
  <node pkg="mapping_and_sar" type="follow_trajectory" name="follow_trajectory" output="screen">
  <rosparam command="load" file="$(arg param_file)" />
  <param name="mav_name" value="$(arg mav_name)"/>
  <!-- param name="yaw_t" value=".75"/ -->
  <param name="ip_addr" value="$(arg host_ip)"/>
  <param name="segment_dedicated_time" value="1.0"/>
   <param name="localization_method" type="string" value="$(arg localization_method)"/>
  </node>

    
	
    <group if="$(eval localization_method == 'orb_slam2_rgbd')">
    <node pkg="ORB_SLAM2" type="RGBD" name="RGBD" args="$(arg orb_slam2_dir)/Vocabulary/ORBvoc.txt $(arg orb_slam2_dir)/cameras/airsim-rgbd.yaml /camera/rgb/image_raw:=/Airsim/right/image_raw /camera/depth_registered/sw_registered/image_rect:=/Airsim/depth" />
    </group>

  <node pkg="publish_imu" type="publish_imu" name="publish_imu"/> 

  <!--comment-->
  <!-- rviz -->
  <group if="$(arg DEBUG)">
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find mapping_and_sar)/extras/rvizConfig.rviz"/>
  </group>
  


</launch>
